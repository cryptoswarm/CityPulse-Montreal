#%RAML 1.0
title: Data API for homework2 of INF5190 
protocols: [ HTTP ] 
baseUri: https://flask-data-swarm.herokuapp.com/
version: v1
mediaType: application/json
types:
  CreatedFollowedArrondissement:
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      profile_id:
        type: number
  PostedProfile:
    type: object
    properties: 
      complete_name:
        type: string
        required: true
      email:
        type: string
        required: true
      followed_arr:
        type: string[]
        required: true
  CreatedProfile:
    type: object
    properties: 
      complete_name:
        type: string
        required: true
      email:
        type: string
        required: true
      followed_arr:
        type: CreatedFollowedArrondissement[]
        required: true
      id:
        type: number
  Arrondissement:
    type: object
    properties:
      id:
        type: integer
        required: false
      name:
        type: string
        required: true
      cle:
        type: string
        required: false
  Glissade:
    type: object
    properties:
      name:
        type: string
        required: true
      date_maj:
        type: string
        required: true
      ouvert:
        type: string
        required: true
      deblaye:
        type: string
        required: true
      condition:
        type: string
        required: true
      arrondissement_id:
        type: number
        required: true
  UpdatedGlissade:
    type: object
    properties: 
      name:
        type: string
        required: true
      date_maj:
        type: string
        required: true
      ouvert:
        type: boolean
        required: true
      deblaye:
        type: boolean
        required: true
      condition:
        type: string
        required: true
      arrondissement_id:
        type: number
        required: true
  Error:
    type: object
    properties: 
       message:
        type: string   

/api:
  /installations:
      get:
          description: Get all installations by arrondissement name.
          
          responses:
            200:
              body:
                application/json:
                  type: Arrondissement[]
                  example: |
                    [
                      {
                          "id": 1,
                          "name": "verdun",
                          "cle": "ver"
                      },
                      {
                          "id": 2,
                          "name": "sRivière-des-Prairies–Pointe-aux-Trembles",
                          "cle": "Mrdp"
                      },
                    ]
      /arrondissement:
          /{arrondissementName}:
            uriParameters:
              arrondissementName:
                type: string
            /glissade:
                /{glissadeName}:  
                    uriParameters:
                        glissadeName:
                            type: string
                    get:
                        description: Get a glissade by name and arrondissement name
                        responses:
                            200:
                                body:
                                    application/json:
                                        type: UpdatedGlissade
                                        example: |
                                            {
                                                "arrondissement_id": 13.0,
                                                "condition": "N/A",
                                                "date_maj": "2014-08-17T14:58:57.600623",
                                                "deblaye": false,
                                                "id": 1.0,
                                                "name": "Aire de glissade ,Don-Bosco",
                                                "ouvert": false
                                            }
                            400:
                                body:
                                  application/json:
                                    type: Error
                                    example:  
                                        {"Message": "arrondissement does not exist" } |
                                        {"Message": "Glissade does not exist!" }

  /profile:
    post:
      description: create a profile
      headers: 
      body: 
        application/json:
          type: PostedProfile
          example: 
            {
	            "complete_name": "mokhtar safir",
	            "email": "safir-mokhtar-2@hotmail.fr",
	            "followed_arr": ["arrondissement1", "arrondissement2", "arrondissement3"]
            }
      responses:
        201:
          body:
            application/json:
              type: CreatedProfile
              example: |
                {
                  "complete_name": "mokhtar safir",
                  "email": "safir-mokhtar-2@hotmail.fr",
                  "followed_arr": [
                      "{'id': 18, 'name': 'arrondissement1', 'profile_id': 6}",
                      "{'id': 19, 'name': 'arrondissement2', 'profile_id': 6}",
                      "{'id': 20, 'name': 'arrondissement3', 'profile_id': 6}",
                      "{'id': 21, 'name': 'arrondissement4', 'profile_id': 6}"
                    ],
                  "id": 6.0
                }
        400:
          body:
            application/json:
              type: Error
              example: 
                {"Message": "The provided email is already in use"}
  /glissade:
    /{id}:
        uriParameters:
          id:
            type: number
            description: Glissade identifier
        put:
          description: edit the state of a glissade
          headers: 
          body: 
            application/json:
              type: Glissade
              example: 
                {
                    "name": "Aire de glissade,Saint-Joseph",
                    "date_maj": "2014-08-17T14:58:57.600623+00:00",
                    "ouvert": "0",
                    "deblaye": "0",
                    "condition": "N/A",
                    "arrondissement_id": 13
                }
          responses:
            200:
                body:
                    application/json:
                    type: UpdatedGlissade
                    example: |
                        {
                            "arrondissement_id": 13.0,
                            "condition": "N/A",
                            "date_maj": "2014-08-17T14:58:57.600623",
                            "deblaye": false,
                            "id": 1.0,
                            "name": "Aire de glissade ,Don-Bosco",
                            "ouvert": false
                        }
            400:
                body:
                  application/json:
                    type: Error
                    example:  
                        {"Message": "arrondissement does not exist" } |
                        {"Message": "Glissade does not exist!" }
        delete:
          description: Remove a glissade
          headers:
              Authorization:
                  type: string
                  description: Basic authentication header
                  example: |
                      Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==
          responses:
            200:
                body:
                  application/json:
                      type: UpdatedGlissade
                      example: |
                          {
                              "arrondissement_id": 13.0,
                              "condition": "N/A",
                              "date_maj": "2014-08-17T14:58:57.600623",
                              "deblaye": false,
                              "id": 1.0,
                              "name": "Aire de glissade ,Don-Bosco",
                              "ouvert": false
                          }
            404:
                body:
                  application/json:
                      type: Error
                      example: |
                          { "status":"fail", "message":"glissade does not exist"}
        get:
            description: Get a glissade
            responses:
                200:
                  body:
                    application/json:
                      type: Glissade
                      example: |
                          {
                              "arrondissement_id": 13.0,
                              "condition": "N/A",
                              "date_maj": "2021-10-18T13:45:13",
                              "deblaye": false,
                              "id": 5.0,
                              "name": "Aire de glissade,Saint-Joseph",
                              "ouvert": false
                          }
                404:
                    body:
                      application/json:
                        type: Error
                        example: |
                            {"message": "Glissade does not exist"}




          



  /login:
    # get:
    #   headers:
    #     Authorization:
    #       type: string
    #       description: Basic authentication header
    #       example: |
    #         Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==
  
